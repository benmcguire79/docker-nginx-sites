server {
	listen ${NGINX_PORT};
	server_name ${NGINX_HOST};
	root ${NGINX_ROOTDIR};

	index index.php;

	### Global restrictions configuration file ###
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
		try_files $uri $uri/ /index.php?$args;
	}
	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# Deny access to any files with a .php extension in the uploads directory
	# Works in sub-directory installs and also in multisite network
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}
    
	### WordPress single site rules ###
	# This order might seem weird - this is attempted to match last if rules below fail.
	# http://wiki.nginx.org/HttpCoreModule
	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	# Add trailing slash to */wp-admin requests.
	rewrite /wp-admin$ $scheme://$host$uri/ permanent;

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(eot|otf|woff|woff2|ttf|rss|atom|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		access_log off; log_not_found off; expires max;
	}

	# Media: images, icons, video, audio send expires headers.
	location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ {
	  expires 1M;
	  access_log off;
	  add_header Cache-Control "public";
	}

	# CSS and Javascript send expires headers.
	location ~* \.(?:css|js)$ {
	  expires 1y;
	  access_log off;
	  add_header Cache-Control "public";
	}

	# HTML send expires headers.
	location ~* \.(html)$ {
	  expires 7d;
	  access_log off;
	  add_header Cache-Control "public";
	}

	# Browser caching of static assets.
	location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
	expires 7d;
	add_header Cache-Control "public, no-transform";
	}

	# Enable Gzip compression in NGNIX.
	gzip on;
	gzip_disable "msie6";
	gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

	# nginx max upload limit cannot be larger than this   
	client_max_body_size ${MAX_UPLOAD_LIMIT};
	
	# Pass all .php files onto a php-fpm/php-fcgi server.
	location ~ [^/]\.php(/|$) {
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		if (!-f $document_root$fastcgi_script_name) {
			return 404;
		}
		# This is a robust solution for path info security issue and works with "cgi.fix_pathinfo = 1" in /etc/php.ini (default)

		include fastcgi_params;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		# php max upload limit cannot be larger than this
		fastcgi_param PHP_VALUE "upload_max_filesize=${MAX_UPLOAD_LIMIT} post_max_size=${MAX_UPLOAD_LIMIT}";
		fastcgi_pass ${PHP_FPM_CONTAINER_NAME}:${PHP_FPM_CONTAINER_PORT};
	}
}
